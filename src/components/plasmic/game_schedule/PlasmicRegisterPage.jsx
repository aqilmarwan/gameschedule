// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ivhpgazgw15hPKwKsPQEWr
// Component: 3ykejTCEZN
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_game_schedule.module.css"; // plasmic-import: ivhpgazgw15hPKwKsPQEWr/projectcss
import sty from "./PlasmicRegisterPage.module.css"; // plasmic-import: 3ykejTCEZN/css
import Vector1Stroke3Icon from "./icons/PlasmicIcon__Vector1Stroke3"; // plasmic-import: -xDb8fKqBYH/icon
import Ellipse15Icon from "./icons/PlasmicIcon__Ellipse15"; // plasmic-import: _vIMMB5-4/icon
import Ellipse16Icon from "./icons/PlasmicIcon__Ellipse16"; // plasmic-import: AI_-VTX92M/icon
import Vector1StrokeIcon from "./icons/PlasmicIcon__Vector1Stroke"; // plasmic-import: dd_eaW0X0s/icon
import SocialIcon from "./icons/PlasmicIcon__Social"; // plasmic-import: 30NfKzi4H_/icon
import Vector1Stroke4Icon from "./icons/PlasmicIcon__Vector1Stroke4"; // plasmic-import: DzqyvHh9hmS/icon

export const PlasmicRegisterPage__VariantProps = new Array();

export const PlasmicRegisterPage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicRegisterPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"registerPage"}
            data-plasmic-override={overrides.registerPage}
            className={classNames(projectcss.all, sty.registerPage)}
          >
            <Vector1Stroke3Icon
              className={classNames(projectcss.all, sty.svg__pgJr7)}
              role={"img"}
            />

            <div
              data-plasmic-name={"hero"}
              data-plasmic-override={overrides.hero}
              className={classNames(projectcss.all, sty.hero)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__dk2EH)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ckKaw
                  )}
                >
                  {"Create Your Account"}
                </div>
                {false ? (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__otwAj
                    )}
                  >
                    {"Launching Soon"}
                  </div>
                ) : null}
              </div>
              {false ? (
                <div
                  data-plasmic-name={"graphic"}
                  data-plasmic-override={overrides.graphic}
                  className={classNames(projectcss.all, sty.graphic)}
                >
                  <Ellipse15Icon
                    className={classNames(projectcss.all, sty.svg__ppRvU)}
                    role={"img"}
                  />

                  <Ellipse16Icon
                    className={classNames(projectcss.all, sty.svg__prAbt)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={
                      "design82A0Ada5644E4B87Ae4188Faf9684Ea311"
                    }
                    data-plasmic-override={
                      overrides.design82A0Ada5644E4B87Ae4188Faf9684Ea311
                    }
                    className={classNames(
                      projectcss.all,
                      sty.design82A0Ada5644E4B87Ae4188Faf9684Ea311
                    )}
                  />
                </div>
              ) : null}
            </div>
            <div
              data-plasmic-name={"form"}
              data-plasmic-override={overrides.form}
              className={classNames(projectcss.all, sty.form)}
            >
              <div
                data-plasmic-name={"loginBtn"}
                data-plasmic-override={overrides.loginBtn}
                className={classNames(projectcss.all, sty.loginBtn)}
              >
                <a
                  data-plasmic-name={"rectangle"}
                  data-plasmic-override={overrides.rectangle}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.rectangle
                  )}
                  href={`/new-page-2`}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4PRzS
                  )}
                >
                  {"Register"}
                </div>
              </div>
              <div
                data-plasmic-name={"password"}
                data-plasmic-override={overrides.password}
                className={classNames(projectcss.all, sty.password)}
              >
                <div
                  data-plasmic-name={"rectangle2"}
                  data-plasmic-override={overrides.rectangle2}
                  className={classNames(projectcss.all, sty.rectangle2)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v0KWf
                  )}
                >
                  {"Username"}
                </div>
              </div>
              <div
                data-plasmic-name={"password2"}
                data-plasmic-override={overrides.password2}
                className={classNames(projectcss.all, sty.password2)}
              >
                <div
                  data-plasmic-name={"rectangle3"}
                  data-plasmic-override={overrides.rectangle3}
                  className={classNames(projectcss.all, sty.rectangle3)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bt4Yg
                  )}
                >
                  {"Password"}
                </div>
              </div>
              <div
                data-plasmic-name={"username"}
                data-plasmic-override={overrides.username}
                className={classNames(projectcss.all, sty.username)}
              >
                <div
                  data-plasmic-name={"rectangle4"}
                  data-plasmic-override={overrides.rectangle4}
                  className={classNames(projectcss.all, sty.rectangle4)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hQgO
                  )}
                >
                  {"Email"}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames(projectcss.all, sty.footer)}
            >
              <div
                data-plasmic-name={"bottom"}
                data-plasmic-override={overrides.bottom}
                className={classNames(projectcss.all, sty.bottom)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mW740
                  )}
                >
                  {"Â© Copyright 2022 GameSchedule"}
                </div>
              </div>
              <div
                data-plasmic-name={"right"}
                data-plasmic-override={overrides.right}
                className={classNames(projectcss.all, sty.right)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oeSuO
                  )}
                >
                  {"About\nTerms\nLegal"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__saW8G
                  )}
                >
                  {"Press\nSupport"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7Y26J
                  )}
                >
                  {"Twitter\nInstagram"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3O94
                  )}
                >
                  {"About"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qcdgA
                  )}
                >
                  {"Contact"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8W2Hh
                  )}
                >
                  {"Social"}
                </div>
              </div>
              <div
                data-plasmic-name={"left"}
                data-plasmic-override={overrides.left}
                className={classNames(projectcss.all, sty.left)}
              >
                <div
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames(projectcss.all, sty.logo)}
                >
                  <Vector1StrokeIcon
                    className={classNames(projectcss.all, sty.svg__zdwGz)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"nftlanding"}
                    data-plasmic-override={overrides.nftlanding}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.nftlanding
                    )}
                  >
                    {"gameschedule"}
                  </div>
                </div>
                <SocialIcon
                  className={classNames(projectcss.all, sty.svg__y1Bsf)}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"divider"}
                data-plasmic-override={overrides.divider}
                className={classNames(projectcss.all, sty.divider)}
              >
                <div
                  data-plasmic-name={"rectangle9"}
                  data-plasmic-override={overrides.rectangle9}
                  className={classNames(projectcss.all, sty.rectangle9)}
                />
              </div>
            </div>
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <div
                data-plasmic-name={"logo2"}
                data-plasmic-override={overrides.logo2}
                className={classNames(projectcss.all, sty.logo2)}
              >
                <Vector1Stroke4Icon
                  className={classNames(projectcss.all, sty.svg__hQzTd)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"nftlanding2"}
                  data-plasmic-override={overrides.nftlanding2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.nftlanding2
                  )}
                >
                  {"gameschedule"}
                </div>
              </div>
              <p.Stack
                as={"div"}
                data-plasmic-name={"navigation"}
                data-plasmic-override={overrides.navigation}
                hasGap={true}
                className={classNames(projectcss.all, sty.navigation)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p33Mt
                  )}
                >
                  {"Features"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xQdKr
                  )}
                >
                  {"About"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mpKyw
                  )}
                >
                  {"Launch"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xx9Lc
                  )}
                >
                  {"Sign Up"}
                </div>
              </p.Stack>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "registerPage",
    "hero",
    "graphic",
    "design82A0Ada5644E4B87Ae4188Faf9684Ea311",
    "form",
    "loginBtn",
    "rectangle",
    "password",
    "rectangle2",
    "password2",
    "rectangle3",
    "username",
    "rectangle4",
    "footer",
    "bottom",
    "right",
    "left",
    "logo",
    "nftlanding",
    "divider",
    "rectangle9",
    "header",
    "logo2",
    "nftlanding2",
    "navigation"
  ],

  registerPage: [
    "registerPage",
    "hero",
    "graphic",
    "design82A0Ada5644E4B87Ae4188Faf9684Ea311",
    "form",
    "loginBtn",
    "rectangle",
    "password",
    "rectangle2",
    "password2",
    "rectangle3",
    "username",
    "rectangle4",
    "footer",
    "bottom",
    "right",
    "left",
    "logo",
    "nftlanding",
    "divider",
    "rectangle9",
    "header",
    "logo2",
    "nftlanding2",
    "navigation"
  ],

  hero: ["hero", "graphic", "design82A0Ada5644E4B87Ae4188Faf9684Ea311"],
  graphic: ["graphic", "design82A0Ada5644E4B87Ae4188Faf9684Ea311"],
  design82A0Ada5644E4B87Ae4188Faf9684Ea311: [
    "design82A0Ada5644E4B87Ae4188Faf9684Ea311"
  ],

  form: [
    "form",
    "loginBtn",
    "rectangle",
    "password",
    "rectangle2",
    "password2",
    "rectangle3",
    "username",
    "rectangle4"
  ],

  loginBtn: ["loginBtn", "rectangle"],
  rectangle: ["rectangle"],
  password: ["password", "rectangle2"],
  rectangle2: ["rectangle2"],
  password2: ["password2", "rectangle3"],
  rectangle3: ["rectangle3"],
  username: ["username", "rectangle4"],
  rectangle4: ["rectangle4"],
  footer: [
    "footer",
    "bottom",
    "right",
    "left",
    "logo",
    "nftlanding",
    "divider",
    "rectangle9"
  ],

  bottom: ["bottom"],
  right: ["right"],
  left: ["left", "logo", "nftlanding"],
  logo: ["logo", "nftlanding"],
  nftlanding: ["nftlanding"],
  divider: ["divider", "rectangle9"],
  rectangle9: ["rectangle9"],
  header: ["header", "logo2", "nftlanding2", "navigation"],
  logo2: ["logo2", "nftlanding2"],
  nftlanding2: ["nftlanding2"],
  navigation: ["navigation"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicRegisterPage__ArgProps,
          internalVariantPropNames: PlasmicRegisterPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicRegisterPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicRegisterPage";
  } else {
    func.displayName = `PlasmicRegisterPage.${nodeName}`;
  }
  return func;
}

export const PlasmicRegisterPage = Object.assign(
  // Top-level PlasmicRegisterPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    registerPage: makeNodeComponent("registerPage"),
    hero: makeNodeComponent("hero"),
    graphic: makeNodeComponent("graphic"),
    design82A0Ada5644E4B87Ae4188Faf9684Ea311: makeNodeComponent(
      "design82A0Ada5644E4B87Ae4188Faf9684Ea311"
    ),
    form: makeNodeComponent("form"),
    loginBtn: makeNodeComponent("loginBtn"),
    rectangle: makeNodeComponent("rectangle"),
    password: makeNodeComponent("password"),
    rectangle2: makeNodeComponent("rectangle2"),
    password2: makeNodeComponent("password2"),
    rectangle3: makeNodeComponent("rectangle3"),
    username: makeNodeComponent("username"),
    rectangle4: makeNodeComponent("rectangle4"),
    footer: makeNodeComponent("footer"),
    bottom: makeNodeComponent("bottom"),
    right: makeNodeComponent("right"),
    left: makeNodeComponent("left"),
    logo: makeNodeComponent("logo"),
    nftlanding: makeNodeComponent("nftlanding"),
    divider: makeNodeComponent("divider"),
    rectangle9: makeNodeComponent("rectangle9"),
    header: makeNodeComponent("header"),
    logo2: makeNodeComponent("logo2"),
    nftlanding2: makeNodeComponent("nftlanding2"),
    navigation: makeNodeComponent("navigation"),
    // Metadata about props expected for PlasmicRegisterPage
    internalVariantProps: PlasmicRegisterPage__VariantProps,
    internalArgProps: PlasmicRegisterPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicRegisterPage;
/* prettier-ignore-end */
