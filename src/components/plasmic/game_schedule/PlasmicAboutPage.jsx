// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ivhpgazgw15hPKwKsPQEWr
// Component: UvGmpU-W8G
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_game_schedule.module.css"; // plasmic-import: ivhpgazgw15hPKwKsPQEWr/projectcss
import sty from "./PlasmicAboutPage.module.css"; // plasmic-import: UvGmpU-W8G/css
import Vector1StrokeIcon from "./icons/PlasmicIcon__Vector1Stroke"; // plasmic-import: dd_eaW0X0s/icon
import SocialIcon from "./icons/PlasmicIcon__Social"; // plasmic-import: 30NfKzi4H_/icon
import Vector1Stroke4Icon from "./icons/PlasmicIcon__Vector1Stroke4"; // plasmic-import: DzqyvHh9hmS/icon
import Vector1Stroke3Icon from "./icons/PlasmicIcon__Vector1Stroke3"; // plasmic-import: -xDb8fKqBYH/icon

export const PlasmicAboutPage__VariantProps = new Array();

export const PlasmicAboutPage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicAboutPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"aboutPage"}
            data-plasmic-override={overrides.aboutPage}
            className={classNames(projectcss.all, sty.aboutPage)}
          >
            <div
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames(projectcss.all, sty.footer)}
            >
              <div
                data-plasmic-name={"bottom"}
                data-plasmic-override={overrides.bottom}
                className={classNames(projectcss.all, sty.bottom)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ugr0K
                  )}
                >
                  {"Â© Copyright 2022 GameSchedule"}
                </div>
              </div>
              <div
                data-plasmic-name={"right"}
                data-plasmic-override={overrides.right}
                className={classNames(projectcss.all, sty.right)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1YXC
                  )}
                >
                  {"About\nTerms\nLegal"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zTAo
                  )}
                >
                  {"Press\nSupport"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___616Wg
                  )}
                >
                  {"Twitter\nInstagram"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4ITmy
                  )}
                >
                  {"About"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jp0LQ
                  )}
                >
                  {"Contact"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jpvej
                  )}
                >
                  {"Social"}
                </div>
              </div>
              <div
                data-plasmic-name={"left"}
                data-plasmic-override={overrides.left}
                className={classNames(projectcss.all, sty.left)}
              >
                <div
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames(projectcss.all, sty.logo)}
                >
                  <Vector1StrokeIcon
                    className={classNames(projectcss.all, sty.svg__yyDxN)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"nftlanding"}
                    data-plasmic-override={overrides.nftlanding}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.nftlanding
                    )}
                  >
                    {"gameschedule"}
                  </div>
                </div>
                <SocialIcon
                  className={classNames(projectcss.all, sty.svg__giaS)}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"divider"}
                data-plasmic-override={overrides.divider}
                className={classNames(projectcss.all, sty.divider)}
              >
                <div
                  data-plasmic-name={"rectangle9"}
                  data-plasmic-override={overrides.rectangle9}
                  className={classNames(projectcss.all, sty.rectangle9)}
                />
              </div>
            </div>
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <div
                data-plasmic-name={"logo2"}
                data-plasmic-override={overrides.logo2}
                className={classNames(projectcss.all, sty.logo2)}
              >
                <Vector1Stroke4Icon
                  className={classNames(projectcss.all, sty.svg___9Voti)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"nftlanding2"}
                  data-plasmic-override={overrides.nftlanding2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.nftlanding2
                  )}
                >
                  {"gameschedule"}
                </div>
              </div>
              <p.Stack
                as={"div"}
                data-plasmic-name={"navigation"}
                data-plasmic-override={overrides.navigation}
                hasGap={true}
                className={classNames(projectcss.all, sty.navigation)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__szoxp
                  )}
                >
                  {"Features"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u0Fr4
                  )}
                >
                  {"About"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__amA24
                  )}
                >
                  {"Launch"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zTkux
                  )}
                >
                  {"Sign Up"}
                </div>
              </p.Stack>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__enwgE
              )}
            >
              {"Our Work Is All About Time Management"}
            </div>
            <div
              data-plasmic-name={"weMakeSureEveryoneGetsAGame"}
              data-plasmic-override={overrides.weMakeSureEveryoneGetsAGame}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.weMakeSureEveryoneGetsAGame
              )}
            >
              {
                "We ensure gamers have a manageable time to allocate their gaming time with their colleagues and friends.\n\nAs much as you value time, we provide the solution arranging entertainment sessions to fully optimize our client time aside from their daily schedule."
              }
            </div>
            <Vector1Stroke3Icon
              className={classNames(projectcss.all, sty.svg__wUlwO)}
              role={"img"}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "aboutPage",
    "footer",
    "bottom",
    "right",
    "left",
    "logo",
    "nftlanding",
    "divider",
    "rectangle9",
    "header",
    "logo2",
    "nftlanding2",
    "navigation",
    "weMakeSureEveryoneGetsAGame"
  ],

  aboutPage: [
    "aboutPage",
    "footer",
    "bottom",
    "right",
    "left",
    "logo",
    "nftlanding",
    "divider",
    "rectangle9",
    "header",
    "logo2",
    "nftlanding2",
    "navigation",
    "weMakeSureEveryoneGetsAGame"
  ],

  footer: [
    "footer",
    "bottom",
    "right",
    "left",
    "logo",
    "nftlanding",
    "divider",
    "rectangle9"
  ],

  bottom: ["bottom"],
  right: ["right"],
  left: ["left", "logo", "nftlanding"],
  logo: ["logo", "nftlanding"],
  nftlanding: ["nftlanding"],
  divider: ["divider", "rectangle9"],
  rectangle9: ["rectangle9"],
  header: ["header", "logo2", "nftlanding2", "navigation"],
  logo2: ["logo2", "nftlanding2"],
  nftlanding2: ["nftlanding2"],
  navigation: ["navigation"],
  weMakeSureEveryoneGetsAGame: ["weMakeSureEveryoneGetsAGame"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicAboutPage__ArgProps,
          internalVariantPropNames: PlasmicAboutPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutPage";
  } else {
    func.displayName = `PlasmicAboutPage.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutPage = Object.assign(
  // Top-level PlasmicAboutPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    aboutPage: makeNodeComponent("aboutPage"),
    footer: makeNodeComponent("footer"),
    bottom: makeNodeComponent("bottom"),
    right: makeNodeComponent("right"),
    left: makeNodeComponent("left"),
    logo: makeNodeComponent("logo"),
    nftlanding: makeNodeComponent("nftlanding"),
    divider: makeNodeComponent("divider"),
    rectangle9: makeNodeComponent("rectangle9"),
    header: makeNodeComponent("header"),
    logo2: makeNodeComponent("logo2"),
    nftlanding2: makeNodeComponent("nftlanding2"),
    navigation: makeNodeComponent("navigation"),
    weMakeSureEveryoneGetsAGame: makeNodeComponent(
      "weMakeSureEveryoneGetsAGame"
    ),
    // Metadata about props expected for PlasmicAboutPage
    internalVariantProps: PlasmicAboutPage__VariantProps,
    internalArgProps: PlasmicAboutPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutPage;
/* prettier-ignore-end */
